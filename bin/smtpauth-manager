#!/usr/local/bin/perl
# -*- coding: utf-8; mode:cperl -*-

package MilterOption;

use Moose;
use Moose::Util::TypeConstraints;
with 'MooseX::Getopt';

foreach my $dir ( qw( RunDirectory LogDirectory ) ) {
    subtype "ManagerOption::$dir",
	as 'Str',
	where { -d $_ },
	message { qq{$dir directory "$_" must be exists.} };
}

foreach my $value ( qw( MaxChildren MaxRequests Threshold Period ) ) {
    subtype "ManagerOption::$value",
	as 'Int',
        where { $_ >= 0 },
	message { "$value must be plus integer." };
}

has 'rundir'       => ( isa => 'ManagerOption::RunDirectory', is => 'ro', default => '/var/run/smtpauth' );
has 'logdir'       => ( isa => 'ManagerOption::LogDirectory', is => 'ro', default => '/var/log/smtpauth' );
has 'max_children' => ( isa => 'ManagerOption::MaxChildren',  is => 'ro', default => 5 );
has 'max_requests' => ( isa => 'ManagerOption::MaxRequests',  is => 'ro', default => 1000 );
has 'threshold'    => ( isa => 'ManagerOption::Threshold',    is => 'ro', default => 60 );
has 'period'       => ( isa => 'ManagerOption::Period',       is => 'ro', default => 120 );
has 'foreground'   => ( isa => 'Bool', is => 'ro', default => 0 );
has 'auto_reject'  => ( isa => 'Bool', is => 'ro', default => 0 );

no Moose;
__PACKAGE__->meta->make_immutable;

package main;

use strict;
use warnings;
use English;
use POSIX;
use IO::File;
use Sys::Syslog;
use Milter::SMTPAuth;
use Milter::SMTPAuth::Utils;

my $option = MilterOption->new_with_options();

my $pid_file      = sprintf( "%s/pid",                     $option->rundir() );
my $filter_socket = sprintf( "unix:%s/filter.sock",        $option->rundir() );
my $logger_socket = sprintf( "unix:%s/log-collector.sock", $option->rundir() );
my $log_file      = sprintf( "%s/stats.log",               $option->logdir() );

openlog( 'smtpauth-manager', 'pid,nowait', 'mail' );
syslog( 'info', 'starting manager' );

if ( ! $option->foreground() ) {
    Milter::SMTPAuth::Utils::daemonize( $pid_file );
}


my @log_collector_arguments = (
    '--recv_address', $logger_socket,
    '--log',          $log_file,
    '--threshold',    $option->threshold(),
    '--period',       $option->period(),
    '--foreground',
);
if ( $option->auto_reject() ) {
    push( @log_collector_arguments, '--auto_reject' );
}

my @filter_arguments = (
    '--listen_address', $filter_socket,
    '--logger_address', $logger_socket,
    '--max_children',   $option->max_children(),
    '--max_requests',   $option->max_requests(),
    '--foreground',
);

my $manager = new Milter::SMTPAuth(
    processes => [
        new Milter::SMTPAuth::Child(
            command     => 'smtpauth-log-collector',
            arguments   => \@log_collector_arguments,
            signal_stop => 10,          # SIGUSR1
        ),
        new Milter::SMTPAuth::Child(
            command   => 'smtpauth-filter',
            arguments => \@filter_arguments,
        ),
    ]
);
$SIG{TERM} = $SIG{INT} = sub {
    $manager->stop();
    if ( -f $pid_file ) {
	unlink( $pid_file );
    }
};

$manager->start();
