#!/usr/local/bin/perl
# -*- coding: utf-8; mode:cperl -*-

package TestOption;

use Moose;
use Moose::Util::TypeConstraints;
with 'MooseX::Getopt';

has 'sender'      => ( traits      => [ 'Getopt' ],
                       isa         => 'Str',
                       is          => 'ro',
                       cmd_aliases => 's',
                       required    => 1 );
has 'recipients'  => ( traits      => ['Array', 'Getopt' ],
                       isa         => 'ArrayRef[Str]',
                       is          => 'ro',
                       required    => 1,
                       handles     => { all => 'elements' },
                       cmd_aliases => 'r',
                     );
has 'auth_id'     => ( traits      => [ 'Getopt' ],
                       isa         => 'Str',
                       is          => 'ro',
                       required    => 1,
                       cmd_aliases => 'a',
                     );
has 'password'    => ( traits      => [ 'Getopt' ],
                       isa         => 'Str',
                       is          => 'ro',
                       required    => 1,
                       cmd_aliases => 'P' );
has 'hostname'    => ( traits      => [ 'Getopt' ],
                       isa         => 'Str',
                       is          => 'ro',
                       default      => '127.0.0.1',
                       cmd_aliases => 'h' );
has 'port'        => ( traits      => [ 'Getopt' ],
                       isa         => 'Int',
                       is          => 'ro',
                       default     => 587,
                       cmd_aliases => 'p' );

no Moose;
no Moose::Util::TypeConstraints;
__PACKAGE__->meta->make_immutable;

package main;

use strict;
use warnings;
use English;
use Net::SMTP;

sub message {
  my ( $from, $to ) = @_;

  return (
          "From: $from",
          "To: $to",
          "Subject: test",
          "",
          "test"
         );
}


my $option = TestOption->new_with_options();

my $smtp = new Net::SMTP( Host => $option->hostname(),
                          Port => $option->port() );

if ( ! $smtp->auth( $option->auth_id(), $option->password() ) ) {
  print STDERR qq{"AUTH ..." faiure.\n};
  $smtp->quit();
  exit( 0 );
}


foreach my $recipient ( $option->all() ) {
  if ( ! $smtp->mail( $option->sender() ) ) {
    printf STDERR qq{"Mail From: %s" faiure.\n}, $option->sender();
    last;
  }
  if ( ! $smtp->recipient( $recipient ) ) {
    printf STDERR qq{"RCPT To: %s" faiure.\n}, $recipient;
    last;
  }
  if ( ! $smtp->data( message( $option->sender(), $recipient ) ) ) {
    print STDERR qq{"DATA ...." faiure.\n};
    last;
  }
  printf STDERR qq{"From: %s, To: %s" Successed.\n}, $option->sender(), $recipient;
}

$smtp->quit();

