#!/bin/bash
#
### BEGIN INIT INFO
# Provides: milter-smptauth-filter
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $network $syslog
# Short-Description: SMTPAuth filter.
# Description: Stop sending mail from spammer.
#              
### END INIT INFO

# smtpauth-filter: smtpauth-filter processes.
#
# chkconfig: - 29 81
# description: Stop sending mail from spammer.
# processname: smtpauth-filter
# config: /etc/smtpauth/reject_ids.txt

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

CONFIG=/etc/sysconfig/smtpauth/filter
[ -f $CONFIG ] && . $CONFIG

RETVAL=0
PROG="smtpauth-filter"
PREFIX=/usr/local

LISTEN_ADDRESS=${LISTEN_ADDRESS:-unix:/var/run/smtpauth/filter.sock}
LOGGER_ADDRESS=${LOGGER_ADDRESS:-unix:/var/run/smtpauth/log-collector.sock}
MAX_CHILDREN=${MAX_CHILDREN:-5}
MAX_REQUESTS=${MAX_REQUESTS:-1000}
PID_FILE=${PID_FILE:-/var/run/smtpauth/filter.pid}

start() {
        # Start daemons.

	# Check that networking is up.
	[ ${NETWORKING} = "no" ] && exit 1

	[ -x ${PREFIX}/bin/smtpauth-filter ] || exit 1

        echo -n $"Starting $PROG for $site: "
        mkdir -p /var/run/smtpauth
        chown smtpauth-manager:smtpauth-manager /var/run/smtpauth
        daemon ${PREFIX}/bin/${PROG} \
	    --listen_address=$LISTEN_ADDRESS \
	    --logger_address=$LOGGER_ADDRESS \
	    --max_children=$MAX_CHILDREN \
	    --max_requests=$MAX_REQUESTS \
	    --pid_file=$PID_FILE
        RETVAL=$?
        echo
        if [ $RETVAL -eq 0 ] && [ ! -f /var/lock/subsys/$PROG ]; then
            touch /var/lock/subsys/${PROG}
        else
            RETVAL=1
        fi
        return $RETVAL
}

stop() {
        # Stop daemons.
        echo -n $"Shutting down $PROG: "
        killproc $PROG
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$PROG
        return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        stop
        start
        RETVAL=$?
        ;;
  condrestart|try-restart|force-reload)
        if [ -f /var/lock/subsys/$PROG ]; then
            stop
            start
            RETVAL=$?
        fi
        ;;
  status)
        status $PROG
        RETVAL=$?
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
        exit 1
esac

exit $RETVAL
